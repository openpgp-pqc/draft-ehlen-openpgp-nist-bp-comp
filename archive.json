{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-12-24T01:04:29.784117+00:00",
  "repo": "openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 4,
      "id": "I_kwDOL4Ooz86OXbfd",
      "title": "Update the KDFs for the combined KEMs to use SHA3-512 for all 3 parameter sets",
      "url": "https://github.com/openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/issues/4",
      "state": "CLOSED",
      "author": "falko-strenzke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As suggested by Quynh. Reason: SHA3-512 is used inside ML-KEM in any case.\r\n\r\n@QuynhDangNIST ",
      "createdAt": "2024-07-03T12:29:39Z",
      "updatedAt": "2024-07-04T11:35:09Z",
      "closedAt": "2024-07-04T11:35:09Z",
      "comments": [
        {
          "author": "sehlen",
          "authorAssociation": "COLLABORATOR",
          "body": "We discussed this and decided to not make any changes at this point.",
          "createdAt": "2024-07-04T11:35:09Z",
          "updatedAt": "2024-07-04T11:35:09Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOL4Ooz86OXeGP",
      "title": "Clarify that `ECDSA.Sign(ecdsaSecretKey, dataDigest)` does not involve a further hashing step",
      "url": "https://github.com/openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/issues/5",
      "state": "CLOSED",
      "author": "falko-strenzke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Our document in the current state does not actually clearly define the ECDSA signature. It mentions\r\n\r\n        (ecdsaSignatureR, ecdsaSignatureS) <- ECDSA.Sign(ecdsaSecretKey, dataDigest)\r\n\r\nwithout saying what ECDSA.Sign() actually means. In my understanding is that this is raw signing and no further hash is calculated on dataDigest. But indeed that needs clarification in the document.\r\n\r\nFor NIST definition of ECDSA sign we should use: https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-5.pdf#page=33. We might also point to the BSI's specification in parallel: https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/TechGuidelines/TR03111/BSI-TR-03111_V-2-1_pdf.pdf?__blob=publicationFile&v=1#page=22\r\n\r\nI would like to hear also Johannes judgement if what I say above about the hashing is correct.\r\n\r\n@TJ-91 ",
      "createdAt": "2024-07-03T12:34:54Z",
      "updatedAt": "2024-07-05T14:17:42Z",
      "closedAt": "2024-07-05T14:17:42Z",
      "comments": [
        {
          "author": "TJ-91",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree, and this needs to be clarified.",
          "createdAt": "2024-07-04T12:20:04Z",
          "updatedAt": "2024-07-04T12:20:04Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "I_kwDOL4Ooz86OXqpq",
      "title": "Update the KEM-combiner KDF input order to comply with NIST.SP.800-56Cr2",
      "url": "https://github.com/openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/issues/6",
      "state": "CLOSED",
      "author": "falko-strenzke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As pointed out by Quynh: For SHA3-(512/256), the only requirement is that the input to the hash function must be:  counter|| ECC shared secret output || ML-KEM shared secret output || anything else. So, Z is the ECC shared secret output || ML-KEM shared secret output. \r\n\r\nSee also\r\nhttps://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-56Cr2.pdf#page=22",
      "createdAt": "2024-07-03T12:59:14Z",
      "updatedAt": "2024-10-31T09:39:05Z",
      "closedAt": "2024-10-31T09:39:04Z",
      "comments": [
        {
          "author": "falko-strenzke",
          "authorAssociation": "COLLABORATOR",
          "body": "@wussler @TJ-91 This will also affect the main draft. It means anything beyond the shared secrets has to be placed in the fixedInfo according to NIST.SP.800-56Cr2.",
          "createdAt": "2024-07-03T13:07:31Z",
          "updatedAt": "2024-07-03T13:07:31Z"
        },
        {
          "author": "falko-strenzke",
          "authorAssociation": "COLLABORATOR",
          "body": "This LAMPS issue is addressing the same problem: https://github.com/lamps-wg/draft-composite-kem/issues/26",
          "createdAt": "2024-07-04T13:08:41Z",
          "updatedAt": "2024-07-04T13:08:41Z"
        },
        {
          "author": "falko-strenzke",
          "authorAssociation": "COLLABORATOR",
          "body": "We will remove the KEM combiner description completely and replace it by a reference to draft-ietf-openpgp-pqc",
          "createdAt": "2024-10-31T09:39:04Z",
          "updatedAt": "2024-10-31T09:39:04Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOL4Ooz86OvVip",
      "title": "adding references to ECDSA from crypto-refresh (?)",
      "url": "https://github.com/openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/issues/9",
      "state": "OPEN",
      "author": "falko-strenzke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Currently the draft refers to NIST and BSI documents for the definition of ECDSA.\r\n\r\nHowever, for ECDSA, the crypto-refresh refers to \r\n- SEC1: https://www.secg.org/sec1-v2.pdf#page=49\r\n- and RFC 6090: https://www.rfc-editor.org/rfc/rfc6090#section-5.4\r\n\r\nWe should consider to replace those references with the ones from the crypto-refresh or add those on top.",
      "createdAt": "2024-07-08T06:38:40Z",
      "updatedAt": "2024-07-08T06:38:40Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 10,
      "id": "I_kwDOL4Ooz86Ovd9E",
      "title": "remove double ECC ciphertext processing in combined KEM",
      "url": "https://github.com/openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/issues/10",
      "state": "OPEN",
      "author": "falko-strenzke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Quynh reported that the ECC ciphertext in the current design is fed both to the hash internal to the ECC KEM and to the key combiner of the KEM. We should remove one of these.\r\n",
      "createdAt": "2024-07-08T06:57:56Z",
      "updatedAt": "2024-07-10T10:09:30Z",
      "closedAt": null,
      "comments": [
        {
          "author": "falko-strenzke",
          "authorAssociation": "COLLABORATOR",
          "body": "Removing the ciphertext from the hashing step in the ECC KEM would be my preferred solution. The reason is that as I understand it, the WG will require a fully generic KEM combiner that will work with any future KEM. So dropping the ciphertext input from the combiner would probably not be the best idea.\r\n\r\nIn that case we could simply remove the whole hashing step of the ECC algorithm and just feed X (with fixed length) to the KEM combiner, since also the public keys are currently fed into both the ECC hashing step and the KEM combiner. \r\n\r\n@QuynhDangNIST Do you agree?\r\n\r\nAt least I don't see that the ECC-KEM that we define here will be used in any different context so that outputting the raw coordinate X shouldn't be a problem. ",
          "createdAt": "2024-07-08T07:00:15Z",
          "updatedAt": "2024-07-08T07:00:15Z"
        },
        {
          "author": "sehlen",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi,\r\n\r\nsince I\u2019m on vacation I won\u2019t look closer into this for now but I think\r\nthat the ECC-KEM ist modeled after Cramer-Shoup and might need this step to\r\ngive a CCA-secure KEM.  I might of course misremember this but it might be\r\nworth checking before any decision is made. Note that we need the CCA\r\nsecurity to obtain a CCA-secure hybrid KEM in case Kyber fails.\r\n\r\nStephan\r\n\r\nOn 8. Jul 2024, at 09:00, Falko Strenzke ***@***.***> wrote:\r\n\r\n\ufeff\r\n\r\nRemoving the ciphertext from the hashing step in the ECC KEM would be my\r\npreferred solution. The reason is that as I understand it, the WG will\r\nrequire a fully generic KEM combiner that will work with any future KEM. So\r\ndropping the ciphertext input from the combiner would probably not be the\r\nbest idea.\r\n\r\nIn that case we could simply remove the whole hashing step of the ECC\r\nalgorithm and just feed X (with fixed length) to the KEM combiner, since\r\nalso the public keys are currently fed into both the ECC hashing step and\r\nthe KEM combiner.\r\n\r\n@QuynhDangNIST <https://github.com/QuynhDangNIST> Do you agree?\r\n\r\nAt least I don't see that the ECC-KEM that we define here will be used in\r\nany different context so that outputting the raw coordinate X shouldn't be\r\na problem.\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub\r\n<https://github.com/openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/issues/10#issuecomment-2213190813>,\r\nor unsubscribe\r\n<https://github.com/notifications/unsubscribe-auth/AAS3NUIE7SKWPDTD4QBGIFLZLI2JLAVCNFSM6AAAAABKQF6UGGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDEMJTGE4TAOBRGM>\r\n.\r\nYou are receiving this because you are subscribed to this thread.Message\r\nID: <openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/issues/10/2213190813@\r\ngithub.com>\r\n",
          "createdAt": "2024-07-09T20:50:22Z",
          "updatedAt": "2024-07-09T20:50:22Z"
        },
        {
          "author": "falko-strenzke",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think that the ECC-KEM ist modeled after Cramer-Shoup and might need this step to give a CCA-secure KEM. I might of course misremember this but it might be worth checking before any decision is made. Note that we need the CCA security to obtain a CCA-secure hybrid KEM in case Kyber fails.\r\n\r\nI think this is satisfied because the KDF given by the KEM combiner (given by SHA3-256) receives both the public keys of both schemes and the ciphertexts of both schemes.  So this means the we would actually compute in the KDF:\r\n\r\n```\r\nSHA3-256(counter || X || ss_kyber || ecPublicKey || ecCiphertext || kyberPublicKey ||\r\nkyberCiphertext || algID || domSep || len(domSep) )\r\n```\r\nwhere X is the raw shared secret from the ECDH. This construction equally fulfills CCA2 security in my understanding.",
          "createdAt": "2024-07-10T06:47:48Z",
          "updatedAt": "2024-07-10T07:56:13Z"
        },
        {
          "author": "QuynhDangNIST",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi all,\n\nThe only 1 point I would like to make here is that the KDF suggested in Falko's email below is NIST-compliant.\n\nThe counter is allowed to be skipped when the hash function is executed only once as specified on page 159 here: https://csrc.nist.gov/csrc/media/Projects/cryptographic-module-validation-program/documents/fips%20140-3/FIPS%20140-3%20IG.pdf\n\nWhen X is a pseudorandom key, not a raw shared secret,  KMAC-KDF in SP 800-108 (on page 11 here: https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-108r1-upd1.pdf ) is an approved KDF where the Key Derivation Key (K) is a concatenation of multiple pseudorandom keys as specified in Section 6.3 pages 21 & 22 here :  https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-133r2.pdf\n\nSo, if we delete the step 3 in ECDH-KEM ( Set the output eccKeyShare to Hash(X || eccCipherText || eccPublicKey),  then Falko's suggested KDF is NIST-compliant.\n\nIf we keep the step 3, eccKeyShare is a pseudorandom key and if eccKeyShare takes the place of X in Falko's suggested KDF, the KDF is not NIST-compliant at this point, but the KMAC-KDF mentioned above is NIST-compliant.\n\nRegards,\nQuynh.\n\nFrom: Falko Strenzke ***@***.***>\nSent: Wednesday, July 10, 2024 2:48 AM\nTo: openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp ***@***.***>\nCc: Dang, Quynh H. (Fed) ***@***.***>; Mention ***@***.***>\nSubject: Re: [openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp] remove double ECC ciphertext processing in combined KEM (Issue #10)\n\n\nI think that the ECC-KEM ist modeled after Cramer-Shoup and might need this step to give a CCA-secure KEM. I might of course misremember this but it might be worth checking before any decision is made. Note that we need the CCA security to obtain a CCA-secure hybrid KEM in case Kyber fails.\n\nI think this is satisfied because the KDF given by the KEM combiner (given by SHA3-256) receives both the public keys of both schemes and the ciphertexts of both schemes. So this means the we would actually compute in the KDF:\n\nSHA3-256(X || ss_kyber || ecPublicKey || ecCiphertext || kyberPublicKey ||kyberCiphertext || algID || domSep || len(domSep) )\n\nwhere X is the raw shared secret from the ECDH. This construction equally fulfills CCA2 security in my understanding.\n\n-\nReply to this email directly, view it on GitHub<https://github.com/openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/issues/10#issuecomment-2219690987>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AFTFKRAN4FRSO24OOYE6S73ZLTKKTAVCNFSM6AAAAABKQF6UGGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDEMJZGY4TAOJYG4>.\nYou are receiving this because you were mentioned.Message ID: ***@***.***>\n",
          "createdAt": "2024-07-10T10:09:29Z",
          "updatedAt": "2024-07-10T10:09:29Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "I_kwDOL4Ooz86OvhAt",
      "title": "Use the term \"shared secret\" or \"shared secret key\" throughout the document",
      "url": "https://github.com/openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/issues/11",
      "state": "OPEN",
      "author": "falko-strenzke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Replace for instance the currently used term \"ML-KEM symmetric key share\"",
      "createdAt": "2024-07-08T07:05:19Z",
      "updatedAt": "2024-07-08T07:05:19Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 13,
      "id": "I_kwDOL4Ooz86ci9ug",
      "title": "remove KEM combiner description and instead refer to the construction in draft-ietf-openpgp-pqc",
      "url": "https://github.com/openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/issues/13",
      "state": "OPEN",
      "author": "falko-strenzke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "TJ-91"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-31T09:40:13Z",
      "updatedAt": "2024-11-04T09:13:19Z",
      "closedAt": null,
      "comments": [
        {
          "author": "TJ-91",
          "authorAssociation": "COLLABORATOR",
          "body": "I proposed #14 with minimal changes to achieve this.\r\n\r\nWe can think about referencing instead of re-defining other stuff as well.",
          "createdAt": "2024-11-04T09:13:18Z",
          "updatedAt": "2024-11-04T09:13:18Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOL4Ooz85wxTzB",
      "title": "Consistent introduction of ML-KEM-512, various updates",
      "url": "https://github.com/openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/pull/1",
      "state": "MERGED",
      "author": "falko-strenzke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "consistent introd. of ML-KEM-512, updates from core pqc draft, Stephan as author, referencing of draft-ietf-openpgp-pqc-03, added introduction, etc.",
      "createdAt": "2024-05-28T14:01:30Z",
      "updatedAt": "2024-07-04T11:05:26Z",
      "baseRepository": "openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp",
      "baseRefName": "main",
      "baseRefOid": "78a0bb0671677fc8ecd4e6716a08a575d4a2b9ec",
      "headRepository": "openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp",
      "headRefName": "update-key-comb-etc",
      "headRefOid": "0802fd259fb712f5077a5ca4bae526af153308b0",
      "closedAt": "2024-07-04T11:05:25Z",
      "mergedAt": "2024-07-04T11:05:25Z",
      "mergedBy": "falko-strenzke",
      "mergeCommit": {
        "oid": "a815e623d15adf85b8379e5e9ff6daf2af259057"
      },
      "comments": [
        {
          "author": "falko-strenzke",
          "authorAssociation": "COLLABORATOR",
          "body": "> For NIST, I have: ML-KEM-512 + P-256, ML-KEM-768 + P-384, ML-KEM-1024 + P-384, ML-DSA-44 + NIST-256, ML-DSA-65 + P-384 and ML-DSA-87 + P-384. How do I make the needed changes in this draft ?\r\n\r\nI have made the requested changes in the last commit 0802fd259fb712f5077a5ca4bae526af153308b0. @QuynhDangNIST Could you re-approve the review please?",
          "createdAt": "2024-07-03T07:12:31Z",
          "updatedAt": "2024-07-03T07:12:31Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOL4Ooz858PH7o",
          "commit": {
            "abbreviatedOid": "48909c0"
          },
          "author": "TJ-91",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "looks good to me",
          "createdAt": "2024-05-29T06:02:40Z",
          "updatedAt": "2024-05-29T06:44:27Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nThis document introduces additional PQ/T algorithms in OpenPGP and extends [draft-ietf-openpgp-pqc-03].\r\n```\r\n\r\nI just think it's better not to start the sentence / section with a reference",
              "createdAt": "2024-05-29T06:02:40Z",
              "updatedAt": "2024-05-29T06:11:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOL4Ooz858Pgw4",
          "commit": {
            "abbreviatedOid": "48909c0"
          },
          "author": "falko-strenzke",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-29T06:44:56Z",
          "updatedAt": "2024-05-29T06:44:56Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "I rewrote the start of the introduction accordingly.",
              "createdAt": "2024-05-29T06:44:56Z",
              "updatedAt": "2024-05-29T06:44:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOL4Ooz858Pjzp",
          "commit": {
            "abbreviatedOid": "ff8865a"
          },
          "author": "TJ-91",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "",
          "createdAt": "2024-05-29T06:51:57Z",
          "updatedAt": "2024-06-11T13:33:36Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOL4Ooz85_HOvo",
          "commit": {
            "abbreviatedOid": "1358ccb"
          },
          "author": "TJ-91",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "",
          "createdAt": "2024-06-21T12:58:48Z",
          "updatedAt": "2024-06-24T09:37:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOL4Ooz85_5xCS",
          "commit": {
            "abbreviatedOid": "85b44bf"
          },
          "author": "QuynhDangNIST",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "For NIST, I have: ML-KEM-512 + P-256, ML-KEM-768 + P-384, ML-KEM-1024 + P-384, ML-DSA-44 + NIST-256, ML-DSA-65 + P-384 and ML-DSA-87 + P-384. How do I make the needed changes in this draft ? ",
          "createdAt": "2024-06-27T15:59:16Z",
          "updatedAt": "2024-07-04T10:56:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOL4Ooz86AhjJm",
          "commit": {
            "abbreviatedOid": "0802fd2"
          },
          "author": "QuynhDangNIST",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "\"consistent introd. of ML-KEM-512, updates from core pqc draft, Stephan as author, referencing of draft-ietf-openpgp-pqc-03, added introduction, etc.\"  . The changes in introduction text look fine to me. ",
          "createdAt": "2024-07-03T12:11:20Z",
          "updatedAt": "2024-07-03T12:11:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOL4Ooz86AppFv",
          "commit": {
            "abbreviatedOid": "0802fd2"
          },
          "author": "TJ-91",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-04T09:07:58Z",
          "updatedAt": "2024-07-04T09:07:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOL4Ooz86AqIeG",
          "commit": {
            "abbreviatedOid": "0802fd2"
          },
          "author": "sehlen",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-04T09:58:27Z",
          "updatedAt": "2024-07-04T09:58:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 2,
      "id": "PR_kwDOL4Ooz85z42_P",
      "title": "ML kem dsa nist curves",
      "url": "https://github.com/openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/pull/2",
      "state": "OPEN",
      "author": "QuynhDangNIST",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Hi all, \r\n\r\nI have corrected the composites of ECC + ML-KEM/DSA and their corresponding hash functions. \r\n\r\nI corrected the Key combiner to make it compliant with 56C. In 56 C, Z must be either the EC shared secret, ML-KEM shared secret or the concatenation of them. Z does not include anything else.  So, I moved the ciphertexts to the FixedInfo (called Otherinfo in the previous version of 56C), see page 13 https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-56Cr2.pdf for the definition of Z. \r\n\r\n(counter || Z || FixedInfo) is the x in H(x) on page 11 and x is the encData. \r\n\r\nIncluding the ciphertexts does not hurt security. That is why I don't object it but it does not mean any endorsement from me. ",
      "createdAt": "2024-06-28T12:45:07Z",
      "updatedAt": "2024-07-02T11:12:20Z",
      "baseRepository": "openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp",
      "baseRefName": "main",
      "baseRefOid": "78a0bb0671677fc8ecd4e6716a08a575d4a2b9ec",
      "headRepository": "openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp",
      "headRefName": "ML-KEM-DSA-NIST-Curves",
      "headRefOid": "530fa85bb1b3bd98000e3ac60bddcc4d714cd3f7",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDOL4Ooz85z69Tu",
      "title": "Update the prehash function to SHA3-384 for ML-DSA-44",
      "url": "https://github.com/openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/pull/3",
      "state": "OPEN",
      "author": "QuynhDangNIST",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Update the prehash function to SHA3-384 for ML-DSA-44 so that level 2 security is achieved.",
      "createdAt": "2024-06-28T18:39:05Z",
      "updatedAt": "2024-07-04T11:08:44Z",
      "baseRepository": "openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp",
      "baseRefName": "ML-KEM-DSA-NIST-Curves",
      "baseRefOid": "34fc8d59b655883c777daa3be22ee6efd75c8c67",
      "headRepository": "openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp",
      "headRefName": "QuynhDangNIST-patch-1",
      "headRefOid": "99e3f4894a82825f9627e850810d8cd7984cac19",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOL4Ooz86Aqqhd",
          "commit": {
            "abbreviatedOid": "99e3f48"
          },
          "author": "falko-strenzke",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T11:07:10Z",
          "updatedAt": "2024-07-04T11:07:10Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "SHA3-384 is not defined for OpenPGP",
              "createdAt": "2024-07-04T11:07:10Z",
              "updatedAt": "2024-07-04T11:07:10Z"
            }
          ]
        }
      ]
    },
    {
      "number": 7,
      "id": "PR_kwDOL4Ooz850hZ_s",
      "title": "multiple corrections from proof-reading, also fixes #5",
      "url": "https://github.com/openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/pull/7",
      "state": "MERGED",
      "author": "falko-strenzke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "fixes #5 and addresses that #6 will be resolved before IETF 121",
      "createdAt": "2024-07-05T10:13:14Z",
      "updatedAt": "2024-07-05T14:17:52Z",
      "baseRepository": "openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp",
      "baseRefName": "main",
      "baseRefOid": "a815e623d15adf85b8379e5e9ff6daf2af259057",
      "headRepository": "openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp",
      "headRefName": "corrections-falko",
      "headRefOid": "5fb5bb4da2e62698bb11abdc84f8749c398320c7",
      "closedAt": "2024-07-05T14:17:42Z",
      "mergedAt": "2024-07-05T14:17:41Z",
      "mergedBy": "falko-strenzke",
      "mergeCommit": {
        "oid": "1dfb0795dcda47b9ebfd06b897797edd998846c3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOL4Ooz86Axbv0",
          "commit": {
            "abbreviatedOid": "cc34b9e"
          },
          "author": "falko-strenzke",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T10:28:18Z",
          "updatedAt": "2024-07-05T10:28:18Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "We don't need to justify the construction here, because we are simply adopting it from draft-ietf-openpgp-pqc.",
              "createdAt": "2024-07-05T10:28:18Z",
              "updatedAt": "2024-07-05T10:28:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOL4Ooz86AyN6D",
          "commit": {
            "abbreviatedOid": "cc34b9e"
          },
          "author": "TJ-91",
          "authorAssociation": "COLLABORATOR",
          "state": "DISMISSED",
          "body": "looks good",
          "createdAt": "2024-07-05T12:41:50Z",
          "updatedAt": "2024-07-05T13:02:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOL4Ooz86AyUD-",
          "commit": {
            "abbreviatedOid": "cc34b9e"
          },
          "author": "TJ-91",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T12:56:12Z",
          "updatedAt": "2024-07-05T12:56:12Z",
          "comments": [
            {
              "originalPosition": 153,
              "body": "```suggestion\r\n# Contributors\r\nStavros Kousidis\r\n```",
              "createdAt": "2024-07-05T12:56:12Z",
              "updatedAt": "2024-07-05T12:56:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOL4Ooz86Ayo8W",
          "commit": {
            "abbreviatedOid": "5fb5bb4"
          },
          "author": "QuynhDangNIST",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T13:44:36Z",
          "updatedAt": "2024-07-05T13:44:37Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "Looks good to me. ",
              "createdAt": "2024-07-05T13:44:37Z",
              "updatedAt": "2024-07-05T13:44:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOL4Ooz86AyxDj",
          "commit": {
            "abbreviatedOid": "5fb5bb4"
          },
          "author": "QuynhDangNIST",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-05T14:01:23Z",
          "updatedAt": "2024-07-05T14:01:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOL4Ooz86Ay23c",
          "commit": {
            "abbreviatedOid": "5fb5bb4"
          },
          "author": "TJ-91",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-05T14:14:48Z",
          "updatedAt": "2024-07-05T14:14:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 8,
      "id": "PR_kwDOL4Ooz850ikjg",
      "title": "fix several typos",
      "url": "https://github.com/openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/pull/8",
      "state": "MERGED",
      "author": "TJ-91",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-05T13:43:48Z",
      "updatedAt": "2024-07-08T07:06:39Z",
      "baseRepository": "openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp",
      "baseRefName": "main",
      "baseRefOid": "a815e623d15adf85b8379e5e9ff6daf2af259057",
      "headRepository": "openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp",
      "headRefName": "corrections-johannes",
      "headRefOid": "c799a86b9384043bf367853ef0a60457a5f21d99",
      "closedAt": "2024-07-08T07:06:34Z",
      "mergedAt": "2024-07-08T07:06:34Z",
      "mergedBy": "falko-strenzke",
      "mergeCommit": {
        "oid": "c7c49a1ad928426cffb983ae3338b9382395ffa8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOL4Ooz86Aypnb",
          "commit": {
            "abbreviatedOid": "c799a86"
          },
          "author": "falko-strenzke",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-05T13:46:13Z",
          "updatedAt": "2024-07-05T13:46:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOL4Ooz86A0hPQ",
          "commit": {
            "abbreviatedOid": "c799a86"
          },
          "author": "sehlen",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This is fine to merge, if you don\"t agree with my suggestion, this can be made an additional issue.",
          "createdAt": "2024-07-05T20:52:21Z",
          "updatedAt": "2024-07-05T20:53:53Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\n - The ML-KEM encapsulation algorithm is invoked to create an ML-KEM ciphertext together with an ML-KEM shared secret key.\r\n```\r\n\r\nThe usual KEM terminolofy is \"shared secret\" and in FIPS 203 ipd they write \"share secret key\".",
              "createdAt": "2024-07-05T20:52:21Z",
              "updatedAt": "2024-07-05T20:53:53Z"
            },
            {
              "originalPosition": 17,
              "body": "This might have to be applied to other places as well. I don't object to leaving it as is, but I think \"shared secret (key)\" would be better.",
              "createdAt": "2024-07-05T20:53:11Z",
              "updatedAt": "2024-07-05T20:53:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOL4Ooz86A5Ev1",
          "commit": {
            "abbreviatedOid": "c799a86"
          },
          "author": "falko-strenzke",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T07:06:09Z",
          "updatedAt": "2024-07-08T07:06:09Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "In order not to hold up our submission version, I made an issue for your proposal: https://github.com/openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/issues/11",
              "createdAt": "2024-07-08T07:06:09Z",
              "updatedAt": "2024-07-08T07:06:09Z"
            }
          ]
        }
      ]
    },
    {
      "number": 12,
      "id": "PR_kwDOL4Ooz8568Ci-",
      "title": "consistent algo names",
      "url": "https://github.com/openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/pull/12",
      "state": "OPEN",
      "author": "falko-strenzke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-09-10T07:08:23Z",
      "updatedAt": "2024-09-10T07:17:51Z",
      "baseRepository": "openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp",
      "baseRefName": "main",
      "baseRefOid": "c7c49a1ad928426cffb983ae3338b9382395ffa8",
      "headRepository": "openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp",
      "headRefName": "consistent-algo-names",
      "headRefOid": "9a7b770348e2848e1d6fc4b4f1f83fb560307620",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOL4Ooz86IlpBn",
          "commit": {
            "abbreviatedOid": "9a7b770"
          },
          "author": "TJ-91",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": ":+1:",
          "createdAt": "2024-09-10T07:17:51Z",
          "updatedAt": "2024-09-10T07:17:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 14,
      "id": "PR_kwDOL4Ooz86AxWMM",
      "title": "remove KEM combiner description; reference to openpgp pqc draft",
      "url": "https://github.com/openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp/pull/14",
      "state": "OPEN",
      "author": "TJ-91",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "closes #13 ",
      "createdAt": "2024-11-04T09:11:33Z",
      "updatedAt": "2024-11-08T08:45:41Z",
      "baseRepository": "openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp",
      "baseRefName": "main",
      "baseRefOid": "c7c49a1ad928426cffb983ae3338b9382395ffa8",
      "headRepository": "openpgp-pqc/draft-ehlen-openpgp-nist-bp-comp",
      "headRefName": "reference-KEM-combiner",
      "headRefOid": "7c4b650281ce353c9fd48948affd9a79de5a0346",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "falko-strenzke",
          "authorAssociation": "COLLABORATOR",
          "body": "We'll now have to wait with merging this PR until it is clear whether we will actually be able to use the same combiner as in draft-ietf-openpgp-pqc",
          "createdAt": "2024-11-08T08:45:39Z",
          "updatedAt": "2024-11-08T08:45:39Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOL4Ooz86QbVaP",
          "commit": {
            "abbreviatedOid": "7c4b650"
          },
          "author": "falko-strenzke",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-11-08T08:42:52Z",
          "updatedAt": "2024-11-08T08:42:52Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "Same as above: I think keeping the invocation of multiKeyCombine would be clearer.",
              "createdAt": "2024-11-08T08:42:52Z",
              "updatedAt": "2024-11-08T08:44:01Z"
            }
          ]
        }
      ]
    }
  ]
}